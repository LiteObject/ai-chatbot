services:
  postgres:
    image: postgres:15
    container_name: ai-chatbot-postgres
    environment:
      POSTGRES_DB: ai_chatbot
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - ai-chatbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d ai_chatbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: ai-chatbot-chromadb
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - PERSIST_DIRECTORY=/data
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/data
    networks:
      - ai-chatbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ai-chatbot-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8181:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ai-chatbot-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  chroma_data:
  pgadmin_data:

networks:
  ai-chatbot-network:
    driver: bridge
